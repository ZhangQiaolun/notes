p <- ggplot(Edat,aes(x,y)) + geom_path() + coord_fixed(ratio = 1)
p <- p + geom_path(aes(Vdat$x, Vdat$y))
p + geom_line(aes(LinePoints$x, LinePoints$y, group=LinePoints$grp))
LinePoints <- OrbitPoints( )
LinePoints
ggplot(LinePoints,aes(x,y,group=grp))+geom_line()
LinePoints <- OrbitPoints(npoints=365 )
LinePoints
ggplot(LinePoints,aes(x,y,group=grp))+geom_line()
ggplot(LinePoints,aes(x,y,group=grp))+geom_line()+ coord_fixed(ratio = 1)
LinePoints <- OrbitPoints(npoints=410 )
ggplot(LinePoints,aes(x,y,group=grp))+geom_line()+ coord_fixed(ratio = 1)
LinePoints <- OrbitPoints(npoints=380)
ggplot(LinePoints,aes(x,y,group=grp))+geom_line()+ coord_fixed(ratio = 1)
LinePoints <- OrbitPoints(npoints=365)
ggplot(LinePoints,aes(x,y,group=grp))+geom_line()+ coord_fixed(ratio = 1)
ggplot(LinePoints,aes(x,y,group=grp))+geom_line()+ coord_fixed(ratio=1)
LinePoints <- OrbitPoints(npoints=380)
ggplot(LinePoints,aes(x,y,group=grp))+geom_line()+ coord_fixed(ratio=1)
LinePoints <- OrbitPoints(npoints=370)
ggplot(LinePoints,aes(x,y,group=grp))+geom_line()+ coord_fixed(ratio=1)
p <- ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
p
LinePoints <- OrbitPoints(npoints=700)
p <- ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
p
LinePoints <- OrbitPoints(npoints=1000)
p <- ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
p
LinePoints <- OrbitPoints(npoints=2000)
p <- ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
p
Edat <- circleFun( , 1 , npoints = 100)
Vdat <- circleFun( , rV/rE , npoints = 100)
p <- ggplot(Edat) + geom_path(aes(x,y)) + coord_fixed(ratio = 1)
p + geom_path(aes(Vdat$x, Vdat$y))
LinePoints <- OrbitPoints(npoints=365)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
LinePoints <- OrbitPoints(npoints=800)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
LinePoints <- OrbitPoints(npoints=1000)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
LinePoints <- OrbitPoints(npoints=1200)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
rV = 35.98 #million miles.
ObtV = 88 #days - orbital period
LinePoints <- OrbitPoints(npoints=1200)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
LinePoints <- OrbitPoints(npoints=600)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
LinePoints <- OrbitPoints(npoints=800)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
rV = 141.6 #million miles.
ObtV = 687 #days - orbital period
LinePoints <- OrbitPoints(npoints=800)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
LinePoints <- OrbitPoints(npoints=1200)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
LinePoints <- OrbitPoints(npoints=2000)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
LinePoints <- OrbitPoints(npoints=800)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
rV = 35.98 #million miles.
ObtV = 88 #days - orbital period
LinePoints <- OrbitPoints(npoints=800)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
LinePoints <- OrbitPoints(npoints=365)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
LinePoints <- OrbitPoints(npoints=360)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
LinePoints <- OrbitPoints(npoints=365)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
rV = 141.6 #million miles.
ObtV = 687 #days - orbital period
LinePoints <- OrbitPoints(npoints=800)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
rV = 483.8 #million miles.
ObtV = 4380 #days - orbital period
LinePoints <- OrbitPoints(npoints=4380)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
LinePoints <- OrbitPoints(npoints=365)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
LinePoints <- OrbitPoints(npoints=1200)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
LinePoints <- OrbitPoints(npoints=4380)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
#下面我们画地球和火星绕太阳转的图。火星英文名是Mars，我们把rV、ObtV换成火星的信息。
rV = 141.6 #million miles.
ObtV = 687 #days - orbital period
LinePoints <- OrbitPoints(npoints=800)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
rV = 35.98 #million miles.
ObtV = 88 #days - orbital period
LinePoints <- OrbitPoints(npoints=365)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
rE = 92.96 #million miles. 地球距离太阳9296万英里。
rV = 67.24 #million miles. 金星距离太阳6724万英里。
ObtE = 365 #days - orbital period  地球绕太阳公转周期是365天
ObtV = 225 #days - orbital period  金星绕太阳公转周期是225天
LinePoints <- OrbitPoints(npoints=1200)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
library(dplyr)
?arrange
library(dplyr)
rep(1:3)
OrbitPoints <- function(c1= c(0,0), c2= c(0,0),r1=1, r2=rV/rE, Obt1=ObtE, Obt2=ObtV, npoints=80) {
t1 <- seq(from = 0, by = 2*pi/Obt1, length.out = npoints)
t2 <- seq(from = 0, by = 2*pi/Obt2, length.out = npoints)
x1 <- c1[1] + r1 * cos(t1)
y1 <- c1[2] + r1 * sin(t1)
x2 <- c2[1] + r2 * cos(t2)
y2 <- c2[2] + r2 * sin(t2)
ObtPts <- data.frame(x=x1,y=y1,grp =rep(1:npoints))
ObtPts <- cbind(ObtPts,data.frame(x=x1,y=y1,grp =rep(1:npoints)))
ObtPts <- arrange(ObtPts, grp)
return(ObtPts)
}
rV = 141.6 #million miles.
ObtV = 687 #days - orbital period
LinePoints <- OrbitPoints(npoints=800)
OrbitPoints <- function(c1= c(0,0), c2= c(0,0),r1=1, r2=rV/rE, Obt1=ObtE, Obt2=ObtV, npoints=80) {
t1 <- seq(from = 0, by = 2*pi/Obt1, length.out = npoints)
t2 <- seq(from = 0, by = 2*pi/Obt2, length.out = npoints)
x1 <- c1[1] + r1 * cos(t1)
y1 <- c1[2] + r1 * sin(t1)
x2 <- c2[1] + r2 * cos(t2)
y2 <- c2[2] + r2 * sin(t2)
ObtPts <- data.frame(x=x1,y=y1,grp =rep(1:npoints))
ObtPts <- rbind(ObtPts,data.frame(x=x1,y=y1,grp =rep(1:npoints)))
ObtPts <- arrange(ObtPts, grp)
return(ObtPts)
}
rV = 141.6 #million miles.
ObtV = 687 #days - orbital period
LinePoints <- OrbitPoints(npoints=800)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
LinePoints <- OrbitPoints(npoints=10)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
OrbitPoints
LinePoints
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
LinePoints <- OrbitPoints(npoints=100)
rV = 141.6 #million miles.
ObtV = 687 #days - orbital period
LinePoints <- OrbitPoints(npoints=100)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
LinePoints
length(LinePoints)
nrow(LinePoints)
rV = 35.98 #million miles.
ObtV = 88 #days - orbital period
LinePoints <- OrbitPoints(npoints=365)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
OrbitPoints <- function(c1= c(0,0), c2= c(0,0),r1=1, r2=rV/rE, Obt1=ObtE, Obt2=ObtV, npoints=80) {
t1 <- seq(from = 0, by = 2*pi/Obt1, length.out = npoints)
t2 <- seq(from = 0, by = 2*pi/Obt2, length.out = npoints)
x1 <- c1[1] + r1 * cos(t1)
y1 <- c1[2] + r1 * sin(t1)
x2 <- c2[1] + r2 * cos(t2)
y2 <- c2[2] + r2 * sin(t2)
ObtPts <- data.frame(x=x1,y=y1,grp =rep(1:npoints))
ObtPts <- rbind(ObtPts,data.frame(x=x2,y=y2,grp =rep(1:npoints)))
ObtPts <- arrange(ObtPts, grp)
return(ObtPts)
}
rV = 141.6 #million miles.
ObtV = 687 #days - orbital period
LinePoints <- OrbitPoints(npoints=100)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
rV = 67.24 #million miles. 金星距离太阳6724万英里。
ObtV = 225 #days - orbital period  金星绕太阳公转周期是225天。
LinePoints <- OrbitPoints(npoints=1200)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
rV = 141.6 #million miles.
ObtV = 687 #days - orbital period
LinePoints <- OrbitPoints(npoints=100)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
LinePoints <- OrbitPoints(npoints=800)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
rV = 35.98 #million miles. 水星距离太阳3598万英里。
ObtV = 88 #days - orbital period 水星绕太阳公转周期是88天。
LinePoints <- OrbitPoints(npoints=365)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
rV = 67.24 #million miles. 金星距离太阳6724万英里。
ObtV = 225 #days - orbital period  金星绕太阳公转周期是225天。
LinePoints <- OrbitPoints(npoints=1200)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
LinePoints <- OrbitPoints(c2=(1,1),npoints=800)
LinePoints <- OrbitPoints(c2=c(1,1),npoints=800)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
rV = 141.6 #million miles.
ObtV = 687 #days - orbital period
LinePoints <- OrbitPoints(npoints=800)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
LinePoints <- OrbitPoints(c2=c(1,1),npoints=800)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
LinePoints <- OrbitPoints(c2=c(0.5,0.5),npoints=800)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
library(ggplot2)
library(dplyr)
#下面我们画地球和金星绕太阳转的图。金星英文名是Venus。
rE = 92.96 #million miles. 地球距离太阳9296万英里。
rV = 67.24 #million miles. 金星距离太阳6724万英里。
ObtE = 365 #days - orbital period  地球绕太阳公转周期是365天。
ObtV = 225 #days - orbital period  金星绕太阳公转周期是225天。
circleFun <- function(center = c(0,0),radius = 1, npoints = 100){ #这是画圆圈的函数。
#各参数默认值：center = (0,0), 半径=1，需画的点数：100个点。
tt <- seq(0,2*pi,length.out = npoints)   #从0到2*pi画npoints个点。
xx <- center[1] + radius * cos(tt)
yy <- center[2] + radius * sin(tt)  #算npoints个点的横坐标和纵坐标。
return(data.frame(x = xx, y = yy))  #返回一个数据框，名为x的列放横坐标，名为y的列放纵坐标。
}
#OrbitPoints <- function(c1= c(0,0), c2= c(0,0),r1=1, r2=rV/rE, Obt1=ObtE, Obt2=ObtV, npoints=80) {
#  t1 <- seq(from = 0, by = 2*pi/Obt1, length.out = npoints)
#  t2 <- seq(from = 0, by = 2*pi/Obt2, length.out = npoints)
#  ObtPts <- data.frame(x=numeric(0),y=numeric(0),grp = numeric(0))
#  for (i in (1:npoints)) {
#    pt1 = data.frame( x= c1[1] + r1 * cos(t1[i]), y = c1[2] + r1 * sin(t1[i]), grp = i)
#    pt2 = data.frame( x= c2[1] + r2 * cos(t2[i]), y = c2[2] + r2 * sin(t2[i]), grp = i)
#    ObtPts <- rbind(ObtPts,pt1,pt2)
#  }
#  return(ObtPts)
#}
OrbitPoints <- function(c1= c(0,0), c2= c(0,0),r1=1, r2=rV/rE, Obt1=ObtE, Obt2=ObtV, npoints=80) {
t1 <- seq(from = 0, by = 2*pi/Obt1, length.out = npoints)
t2 <- seq(from = 0, by = 2*pi/Obt2, length.out = npoints)
x1 <- c1[1] + r1 * cos(t1)
y1 <- c1[2] + r1 * sin(t1)
x2 <- c2[1] + r2 * cos(t2)
y2 <- c2[2] + r2 * sin(t2)
ObtPts <- data.frame(x=x1,y=y1,grp =rep(1:npoints))
ObtPts <- rbind(ObtPts,data.frame(x=x2,y=y2,grp =rep(1:npoints)))
ObtPts <- arrange(ObtPts, grp)
return(ObtPts)
}
Edat <- circleFun( , 1 , npoints = 100)
Vdat <- circleFun( , rV/rE , npoints = 100)
p <- ggplot(Edat) + geom_path(aes(x,y)) + coord_fixed(ratio = 1)
p + geom_path(aes(Vdat$x, Vdat$y))
rV = 67.24 #million miles. 金星距离太阳6724万英里。
ObtV = 225 #days - orbital period  金星绕太阳公转周期是225天。
LinePoints <- OrbitPoints(npoints=1200)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
OrbitPoints <- function(c1= c(0,0), c2= c(0,0),r1=rE, r2=rV, Obt1=ObtE, Obt2=ObtV, npoints=80) {
t1 <- seq(from = 0, by = 2*pi/Obt1, length.out = npoints)
t2 <- seq(from = 0, by = 2*pi/Obt2, length.out = npoints)
x1 <- c1[1] + 1 * cos(t1)
y1 <- c1[2] + 1 * sin(t1)
x2 <- c2[1] + r2/r1 * cos(t2)
y2 <- c2[2] + r2/r1 * sin(t2)
ObtPts <- data.frame(x=x1,y=y1,grp =rep(1:npoints))
ObtPts <- rbind(ObtPts,data.frame(x=x2,y=y2,grp =rep(1:npoints)))
ObtPts <- arrange(ObtPts, grp)
return(ObtPts)
}
rV = 35.98 #million miles. 水星距离太阳3598万英里。
ObtV = 88 #days - orbital period 水星绕太阳公转周期是88天。
LinePoints <- OrbitPoints(npoints=365)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
LinePoints <- OrbitPoints(r2 = 67.24, Obt2=225, npoints=1200)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
LinePoints <- OrbitPoints(r2 = 35.98, Obt2=88, npoints=365)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
LinePoints <- OrbitPoints(r2 = 141.6, Obt2=687, npoints=800)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
LinePoints <- OrbitPoints(c2=c(0.5,0.5),r2 = 141.6, Obt2=687, npoints=800)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
LinePoints <- OrbitPoints(npoints=1200)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
rV = 67.24 #million miles. 金星距离太阳6724万英里。
ObtV = 225 #days - orbital period  金星绕太阳公转周期是225天。
LinePoints <- OrbitPoints(npoints=1200)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
LinePoints <- OrbitPoints(npoints=2000)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
LinePoints <- OrbitPoints(npoints=4000)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
LinePoints <- OrbitPoints(npoints=3000)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
LinePoints <- OrbitPoints(npoints=2500)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
LinePoints <- OrbitPoints(npoints=1000)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
LinePoints <- OrbitPoints(npoints=1200)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
library(ggplot2)
library(dplyr)
#下面我们画地球和金星绕太阳转的图。金星英文名是Venus。
rE = 92.96 #million miles. 地球距离太阳9296万英里。
rV = 67.24 #million miles. 金星距离太阳6724万英里。
ObtE = 365 #days - orbital period  地球绕太阳公转周期是365天。
ObtV = 225 #days - orbital period  金星绕太阳公转周期是225天。
circleFun <- function(center = c(0,0),radius = 1, npoints = 100){
tt <- seq(0,2*pi,length.out = npoints)
xx <- center[1] + radius * cos(tt)
yy <- center[2] + radius * sin(tt)
return(data.frame(x = xx, y = yy))
}
OrbitPoints <- function(c1= c(0,0), c2= c(0,0),r1=1, r2=rV/rE, Obt1=ObtE, Obt2=ObtV, npoints=80) {
t1 <- seq(from = 0, by = 2*pi/Obt1, length.out = npoints)
t2 <- seq(from = 0, by = 2*pi/Obt2, length.out = npoints)
ObtPts <- data.frame(x=numeric(0),y=numeric(0),grp = numeric(0))
for (i in (1:npoints)) {
pt1 = data.frame( x= c1[1] + r1 * cos(t1[i]), y = c1[2] + r1 * sin(t1[i]), grp = i)
pt2 = data.frame( x= c2[1] + r2 * cos(t2[i]), y = c2[2] + r2 * sin(t2[i]), grp = i)
ObtPts <- rbind(ObtPts,pt1,pt2)
}
return(ObtPts)
}
OrbitPoints <- function(c1= c(0,0), c2= c(0,0),r1=1, r2=rV/rE, Obt1=ObtE, Obt2=ObtV, npoints=80) {
t1 <- seq(from = 0, by = 2*pi/Obt1, length.out = npoints)
t2 <- seq(from = 0, by = 2*pi/Obt2, length.out = npoints)
x1 <- c1[1] + r1 * cos(t1)
y1 <- c1[2] + r1 * sin(t1)
x2 <- c2[1] + r2 * cos(t2)
y2 <- c2[2] + r2 * sin(t2)
ObtPts <- data.frame(x=x1,y=y1,grp =rep(1:npoints))
ObtPts <- rbind(ObtPts,data.frame(x=x2,y=y2,grp =rep(1:npoints)))
ObtPts <- arrange(ObtPts, grp)
return(ObtPts)
}
Edat <- circleFun( , 1 , npoints = 100)
Vdat <- circleFun( , rV/rE , npoints = 100)
p <- ggplot(Edat) + geom_path(aes(x,y)) + coord_fixed(ratio = 1)
p + geom_path(aes(Vdat$x, Vdat$y))
rV = 67.24 #million miles. 金星距离太阳6724万英里。
ObtV = 225 #days - orbital period  金星绕太阳公转周期是225天。
LinePoints <- OrbitPoints(npoints=1200)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
#下面我们画地球和水星绕太阳转的图。水星英文名是Mercury，我们把rV、ObtV换成水星的信息。
rV = 35.98 #million miles. 水星距离太阳3598万英里。
ObtV = 88 #days - orbital period 水星绕太阳公转周期是88天。
LinePoints <- OrbitPoints(npoints=365)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
#下面我们画地球和火星绕太阳转的图。火星英文名是Mars，我们把rV、ObtV换成火星的信息。
rV = 141.6 #million miles.
ObtV = 687 #days - orbital period
LinePoints <- OrbitPoints(npoints=800)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
LinePoints <- OrbitPoints(c2=c(0.5,0.5),npoints=800)
ggplot(LinePoints)+geom_line(aes(x,y,group=grp))+ coord_fixed(ratio=1)
A <-'386030607@qq.com;494878065@qq.com;370896196@qq.com;yyahhff@qq.com;liangjiayugogo@163.com;1213097364@qq.com;714078341@qq.com;2455783714@qq.com;13818781166@126.com;15221695180@163.com;1065431380@qq.com;896974316@qq.com;jdw1996@163.com;chu_0911@hotmail.com;yifengenyuyifenshouh@126.com;363968878@qq.com;15856991700@163.com;xinyuliu001@sina.cn;369396777@qq.com;1813470434@qq.com;joch13cj@student.ju.se;paulina.aberg@hotmail.com;olivier.stamm@me.com;bbb_mz_ddd@hotmail.com;linn.norell@gmail.com;h.fan@student.unsw.edu.au;stephaniemimieng@qq.com;ruairi.kennedy@ucdconnect.ie;tangyijia6527@foxmail.com;lwl1411@sjtu.edu.cn;clark1996@sjtu.edu.cn;longxue35@163.com;jianj_714@sjtu.edu.cn;zjshen@sjtu.edu.com;meier289@umn.edu;zhangyuru@sjtu.edu.cn;hobartsong@hotmail.com;della14@qq.com;'
B <- gsub(';','',A)
nchar(A)-nchar(B)
A <- '386030607@qq.com
494878065@qq.com
719703402@qq.com
370896196@qq.com
yyahhff@qq.com
wangyifeiyifei@126.com
liangjiayugogo@163.com
1213097364@qq.com
zhangyuru@sjtu.edu.cn
714078341@qq.com
2455783714@qq.com
13818781166@126.com
15221695180@163.com
1065431380@qq.com
longxue35@163.com
tangyijia6527@foxmail.com
896974316@qq.com
jdw1996@163.com
lwl1411@sjtu.edu.cn
jianj_714@sjtu.edu.cn
chu_0911@hotmail.com
13918385925@126.com
zoejiaqianma@163.com
zjshen@sjtu.edu.com
363968878@qq.com
15856991700@163.com
xinyuliu001@sina.cn
della14@qq.com
369396777@qq.com
clark1996@sjtu.edu.cn
hobartsong@hotmail.com
1813470434@qq.com
joch13cj@student.ju.se
paulina.aberg@hotmail.com
maov12ab@student.cbs.dk
meier289@umn.edu
olivier.stamm@me.com
bbb_mz_ddd@hotmail.com
linn.norell@gmail.com
h.fan@student.unsw.edu.au
stephaniemimieng@qq.com
ruairi.kennedy@ucdconnect.ie
christopher.buckley@ucdconnect.ie
'
A
gsub('\n\n',';',A)
B <- gsub('\n\n',';',A)
B1 <- gsub('\n',';',B)
B
B <- gsub('\\n\\n',';',A)
B
B1 <- gsub('\\n',';',B)
B1
B2 <- gsub(';',';',B1)
nchar(B1)-nchar(B2)
B2
B2 <- gsub(';','',B1)
nchar(B1)-nchar(B2)
A1 <- 'weiwei-0124@163.com
tbs_1212@163.com
iamark@msn.com
bob.zhang@zhuobai-electric.com
william.zhou@molex.com'
A1
A2 <- gsub('\\n',';',A1)
A2
A1 <- '18601779686@wo.com.cn
26707312@qq.com
sap-fi@163.com
tasselhoff.b@gmail.com
79475874@qq.com'
A2 <- gsub('\\n',';',A1)
A2
A1 <- 'yrherewithme@gmail.com
zhudewu123@263.net
windwisp@sohu.com
qiqinyuan@gmail.com
willow212@163.com'
A2 <- gsub('\\n',';',A1)
A2
A1 <- 'sosodef@163.com
zhong_huaqing000@163.com
koogi8989@naver.com
linda.jk@gmx.de'
library(xlsx)
A2 <- gsub('\\n',';',A1)
A2
A1 <- 'ricer_zhang@163.com
190545843@qq.com
cg_swordman@hotmail.com
1599802653@qq.com
176554379@qq.com'
A2 <- gsub('\\n',';',A1)
A2
A1 <- 'boone.wang@outlook.com
z_1496@sjtu.edu.cn
huangweissro@163.com
kengriffey0502@gmail.com'
A2 <- gsub('\\n',';',A1)
A2
library(ggplot2)
USArrests[1:10,]
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
library(maps)
states_map <- map_data("state") # Merge the data sets together
crime_map <- merge(states_map, crimes, by.x="region", by.y="state")
# After merging, the order has changed, which would lead to polygons drawn in the incorrect order. So, we sort the data.
library(plyr)  # For arrange() function. Sort by group, then order
crime_map <- arrange(crime_map, group, order)
ggplot(crime_map, aes(x=long, y=lat, group=group, fill=Assault)) +geom_polygon(colour="black") +coord_map("polyconic")
ggplot(crime_map, aes(x=long, y=lat, group=group, fill=Assault)) +geom_polygon(colour="black")
setwd("C:/BA/LinearRegression")
#设置工作目录
year <- rep(2008:2010, each=4)
quarter <- rep(1:4, 3)
cpi <- c(162.2, 164.6, 166.5, 166.0,
166.2, 167.0, 168.6, 169.5,
171.0, 172.1, 173.3, 174.0)
plot(cpi, xaxt="n", ylab="CPI", xlab="")
# xaxt = "n" 表示不画x轴的ticks（数值标记），xlab和ylab是x轴和
# y轴的名称，更多参数使用?par调出帮助文件。
axis(1, labels=paste(year,quarter,sep="Q"), at=1:12, las=3)
# 画x轴的标签第一个参数1表示画x轴标记，如果是2则表示画y轴。
# labels=paste(year,quarter,sep="Q") 生成标签字符串
cor(year,cpi)
cor(quarter,cpi)
fit <- lm(cpi ~ year + quarter)
# lm函数进行线性回归。cpi ~ year + quarter是回归模型。
fit
names(fit)
fit$coefficients
fit$residuals
fit$fitted.values # predicted values
fit$model
anova(fit) # anova table
vcov(fit) # covariance matrix for model parameters
confint(fit, level=0.95) # Confidence Intervals (CIs) for model parameters
summary(fit)
# diagnostic plots
plot(fit)
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(fit)
#更多的模型诊断见http://www.statmethods.net/stats/rdiagnostics.html
fit2 <- lm(cpi ~ year)
anova(fit, fit2) #使用F检验比较2个模型是否不同。结果显示两个模型显著不同。第一个模型RSS较少也就较好。
anova(fit, fit2, test="Chisq")
#使用ChiSquare检验比较2个模型是否不同。结果显示两个模型显著不同。第一个模型RSS较少也就较好。
#以下进行预测
data2011 <- data.frame(year=2011, quarter=1:4)
data2011
cpi2011 <- predict(fit, newdata=data2011)
cpi2011
style <- c(rep(1,12), rep(2,4)) #定义2011年预测值的点的Style和颜色。
plot(c(cpi, cpi2011), xaxt="n", ylab="CPI", xlab="", pch=style, col=style)
axis(1, at=1:16, las=3,
labels=c(paste(year,quarter,sep="Q"), "2011Q1", "2011Q2", "2011Q3", "2011Q4"))
?dev
??dev
dev.off()
plot(c(cpi, cpi2011), xaxt="n", ylab="CPI", xlab="", pch=style, col=style)
axis(1, at=1:16, las=3,
labels=c(paste(year,quarter,sep="Q"), "2011Q1", "2011Q2", "2011Q3", "2011Q4"))
style <- c(rep(1,12), rep(2,4)) #定义2011年预测值的点的Style和颜色。
plot(c(cpi, cpi2011), xaxt="n", ylab="CPI", xlab="", pch=style, col=style)
axis(1, at=1:16, las=3,
labels=c(paste(year,quarter,sep="Q"), "2011Q1", "2011Q2", "2011Q3", "2011Q4"))
